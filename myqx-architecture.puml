@startuml Myqx-BFF Architecture

!define RECTANGLE_PADDING 15
!define RECTANGLE_MARGIN 15

skinparam backgroundColor white
skinparam handwritten false
skinparam DefaultFontName Arial
skinparam DefaultFontSize 12
skinparam ArrowColor #333333
skinparam shadowing false
skinparam RoundCorner 10

skinparam rectangle {
    BackgroundColor white
    BorderColor #333333
    FontColor #333333
}

skinparam package {
    BackgroundColor #FEFEFE
    BorderColor #999999
}

skinparam component {
    BackgroundColor white
    BorderColor #333333
    FontColor #333333
}

skinparam interface {
    BackgroundColor white
    BorderColor #333333
}

skinparam note {
    BackgroundColor #FFFFAA
    BorderColor #DDDD77
}

' Definició de colors per a les capes
!define CLIENT_COLOR #C2E0FF
!define VIEW_COLOR #D5E8D4
!define CONTROLLER_COLOR #DAE8FC
!define SERVICE_COLOR #F8CECC
!define REPOSITORY_COLOR #FFE6CC
!define DTO_COLOR #E1D5E7
!define INTERFACE_COLOR #FFF2CC
!define MIDDLEWARE_COLOR #D4E1F5
!define MODEL_COLOR #F5F5F5
!define UTILS_COLOR #FFF8DC

' Títol general
title Arquitectura Myqx-BFF (Backend For Frontend) - Actualitzat 14 de Maig, 2025

' --- CAPES DE L'APLICACIÓ ---
package "Aplicació Flutter" as MobileClient {
    component "Myqx App Mòbil" as Client #CLIENT_COLOR
}

package "Django Myqx-BFF" as BFF {
    ' CAPA D'ENTRADA I MIDDLEWARE
    package "Processament de Peticions" as RequestLayer #MIDDLEWARE_COLOR {
        component "ApiRedirectMiddleware" as ApiRedirectMiddleware
        component "RequestLoggingMiddleware" as RequestLoggingMiddleware
        interface "HttpRequest" as HttpRequest
    }      ' CAPA DE VISTES
    package "Vistes API" as ViewLayer #VIEW_COLOR {
        component "VistesAutenticació" as AuthView
        component "VistesUsuari" as UserView
        component "VistesÀlbum" as AlbumView
        component "VistaFeed" as FeedView
        component "VistaPerfil" as ProfileView
        component "VistaEstatSeguimentUsuari" as UserFollowingStatusView
        component "VistaPerfilCompletUsuari" as UserCompleteProfileView
        component "VistesValoració" as RatingsView
        component "VistaComprovacióSalut" as HealthCheckView
    }
    
    ' CAPA DE CONTROLADORS
    package "Controladors" as ControllerLayer #CONTROLLER_COLOR {
        component "ControladorAutenticació" as AuthController
        component "ControladorUsuaris" as UsersController
        component "ControladorÀlbums" as AlbumsController
        component "ControladorFeed" as FeedController
        component "ControladorPerfil" as ProfileController
    }
      ' CAPA D'INTERFÍCIES
    package "Interfícies" as InterfaceLayer #INTERFACE_COLOR {
        interface "InterfícieServeiUsuari" as UserServiceInterface
        interface "InterfícieServeiÀlbum" as AlbumServiceInterface
        interface "InterfícieServeiFeed" as FeedServiceInterface
        interface "InterfícieServeiPerfil" as ProfileServiceInterface
        interface "InterfícieRepositori<T>" as RepositoryInterface
    }
      ' CAPA DE SERVEIS
    package "Serveis" as ServiceLayer #SERVICE_COLOR {
        component "ServeiBase" as BaseService
        
        package "Implementacions" as ServiceImplementations {
            component "ImplServeiUsuaris" as UsersServiceImpl
            component "ImplServeiAutenticació" as AuthServiceImpl
            component "ImplServeiÀlbums" as AlbumsServiceImpl
            component "ImplServeiFeed" as FeedServiceImpl
            component "ImplServeiPerfil" as ProfileServiceImpl
        }
    }
      ' CAPA DE REPOSITORIS
    package "Repositoris" as RepositoryLayer #REPOSITORY_COLOR {
        component "RepositoriUsuari" as UserRepository
        component "RepositoriÀlbum" as AlbumRepository
        component "RepositoriFeed" as FeedRepository
    }
      ' CAPA DE DTOs
    package "DTOs" as DtoLayer #DTO_COLOR {
        component "DTOUsuari" as UserDTO
        component "DTOÀlbum" as AlbumDTO
        component "DTOValoracióÀlbum" as AlbumRatingDTO
        component "DTOElementFeed" as FeedItemDTO
    }
    
    ' CAPA DE MODELS
    package "Models" as ModelLayer #MODEL_COLOR {
        component "ModelUsuari" as UserModel
    }
    
    ' CAPA D'EXCEPCIONS I UTILS
    package "Utils i Excepcions" as UtilLayer #UTILS_COLOR {
        component "ExcepcionesApi" as ApiExceptions
        component "UtilsResposta" as ResponseUtils
        component "UtilsRegistre" as LoggingUtils
        component "GestorExcepcions" as ExceptionHandler
    }
      ' CONFIGURACIÓ
    package "Configuració" as ConfigLayer {
        component "Configuracions" as Settings
        component "URLs" as URLs
        component "WSGI" as WSGI
    }
}

' BACKENDS EXTERNS
package "Serveis Backend" as BackendServices {
    component "API d'Usuaris" as UsersAPI
    component "API d'Àlbums" as AlbumsAPI
    component "API de Valoracions" as RatingsAPI
    component "API de Feed" as FeedAPI
    component "API de Spotify" as SpotifyAPI
}

' --- RELACIONS ENTRE COMPONENTS ---

' Relacions del client
Client --> HttpRequest : Peticions HTTP

' Flux de petició
HttpRequest --> ApiRedirectMiddleware : Processament
ApiRedirectMiddleware --> RequestLoggingMiddleware : Passa
RequestLoggingMiddleware --> ViewLayer : Enrutament

' Relacions de vistes a controladors
AuthView --> AuthController : Crida
UserView --> UsersController : Crida
AlbumView --> AlbumsController : Crida
ProfileView --> ProfileController : Crida
FeedView --> FeedController : Crida
UserFollowingStatusView --> UsersController : Crida
UserCompleteProfileView --> UsersController : Crida
RatingsView --> AlbumsController : Crida

' Relacions de controladors a repositoris i utils
UsersController --> UserRepository : Utilitza
UsersController --> ResponseUtils : Utilitza
AuthController --> AuthServiceImpl : Utilitza directament
AlbumsController --> AlbumRepository : Utilitza
FeedController --> FeedRepository : Utilitza
ProfileController --> UserRepository : Utilitza
ProfileController --> ProfileServiceImpl : Utilitza

' Implementacions d'interfícies
UserServiceInterface <|.. UsersServiceImpl : Implementa
AlbumServiceInterface <|.. AlbumsServiceImpl : Implementa
FeedServiceInterface <|.. FeedServiceImpl : Implementa
ProfileServiceInterface <|.. ProfileServiceImpl : Implementa
RepositoryInterface <|.. UserRepository : Implementa
RepositoryInterface <|.. AlbumRepository : Implementa
RepositoryInterface <|.. FeedRepository : Implementa

' Relacions de serveis
BaseService <-- UsersServiceImpl : Estén
BaseService <-- AuthServiceImpl : Estén
BaseService <-- AlbumsServiceImpl : Estén
BaseService <-- FeedServiceImpl : Estén
BaseService <-- ProfileServiceImpl : Estén

' Relacions de repositoris a serveis
UserRepository --> UsersServiceImpl : Usa
AlbumRepository --> AlbumsServiceImpl : Usa
FeedRepository --> FeedServiceImpl : Usa

' Relacions de DTOs
UserRepository --> UserDTO : Utilitza
AlbumRepository --> AlbumDTO : Utilitza
AlbumRepository --> AlbumRatingDTO : Utilitza
FeedRepository --> FeedItemDTO : Utilitza

' Relacions amb models
UserDTO --> UserModel : Es relaciona

' Relacions amb utilitats
ExceptionHandler <-- ViewLayer : Gestiona excepcions
LoggingUtils <-- RequestLoggingMiddleware : Usa

' Relacions amb configuració
Settings --> ServiceLayer : Configura
URLs --> ViewLayer : Defineix rutes

' Relacions amb backends externs
UsersServiceImpl --> UsersAPI : Peticions HTTP
AuthServiceImpl --> UsersAPI : Peticions HTTP
AuthServiceImpl --> SpotifyAPI : OAuth
AlbumsServiceImpl --> AlbumsAPI : Peticions HTTP
AlbumsServiceImpl --> RatingsAPI : Peticions HTTP
FeedServiceImpl --> FeedAPI : Peticions HTTP
ProfileServiceImpl --> UsersAPI : Peticions HTTP

' Llegenda de l'arquitectura
note right of BFF
  <b>Arquitectura en Capes del Myqx-BFF:</b>
  
  1. <color:#D5E8D4>Vistes API</color> - Endpoints REST per a l'app mòbil
  2. <color:#DAE8FC>Controladors</color> - Lògica de negoci específica
  3. <color:#FFF2CC>Interfícies</color> - Contractes d'abstracció
  4. <color:#F8CECC>Serveis</color> - Comunicació amb backends externs
  5. <color:#FFE6CC>Repositoris</color> - Accés a dades
  6. <color:#E1D5E7>DTOs</color> - Objectes de transferència de dades
  7. <color:#F5F5F5>Models</color> - Entitats de domini
  8. <color:#FFF8DC>Utilitats</color> - Funcionalitat compartida
  9. <color:#D4E1F5>Middleware</color> - Processament de peticions
end note

@enduml
